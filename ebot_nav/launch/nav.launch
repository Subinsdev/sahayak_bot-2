<launch>

    <!--including the launch file with a navigation world-->
    <include file="$(find ebot_nav)/launch/nav_task_2.launch" />
    <!-- including launch file for localization using AMCL -->
    <include file="$(find ebot_nav)/launch/amcl.launch" />
     <!-- including launch file for visualizing in rviz -->
    <!--<include file="$(find ebot_description)/launch/ebot_visualize.launch"/>-->



    <arg name="map_file" default="$(find ebot_nav)/maps/task2_world.yaml"/>
    <node pkg="map_server" type="map_server" name="map_server" args="$(arg map_file)"/>


      <!-- Move base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find ebot_nav)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find ebot_nav)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find ebot_nav)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find ebot_nav)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find ebot_nav)/config/trajectory_planner.yaml" command="load" />


    <param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="1.0"/>
    <param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="1.0"/>

  </node>

  <node name="waypoints" pkg="ebot_nav" type="wayPoints.py" output="screen"/>

  <!-- Uncomment these lines when you want to submit bag file for task2 -->
<!--
  	<arg name="record" default="true"/>
  	<arg name="rec_name" default="task2.bag"/>
  	<group if="$(arg record)">
  		<node name="rosbag_record_task2" pkg="rosbag" type="record" args="record -O $(find ebot_nav)/bag_files/$(arg rec_name) /odom /cmd_vel /ebot/laser/scan /gazebo/model_states" output="screen"/>
  	</group>
 -->
</launch>
