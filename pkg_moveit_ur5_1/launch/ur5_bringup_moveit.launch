<launch>
    
<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
</node>
    
<rosparam file="$(find pkg_moveit_ur5_1)/config/joint_state_controller.yaml" command="load"/>
    
<node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>
    
<rosparam file="$(find pkg_moveit_ur5_1)/config/trajectory_control.yaml" command="load"/>

<node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" 
args="spawn arm_controller gripper_controller" respawn="false" output="screen"/>

<include file="$(find pkg_moveit_ur5_1)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
</include>
  
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="true"/>
    <rosparam param="/source_list">[/joint_states]</rosparam>
</node>
  
<include file="$(find pkg_moveit_ur5_1)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
 </include>

<!--   ebot -->
	<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ebot_description)/urdf/ebot_ur5.xacro'"/> 
   
<!--   ur5 world 
	<include file="$(find ebot_gazebo)/launch/packaging.launch" />

	<arg name="x" default="0"/>
	<arg name="y" default="0"/>
	<arg name="z" default="0.1"/>
	<arg name="r" default="0"/>
	<arg name="p" default="0"/>
	<arg name="ya" default="0"/>		
-->
<include file="$(find ebot_gazebo)/launch/lab_packaging.launch" />

<arg name="x" default="7.66"/>
<arg name="y" default="2.6"/>
<arg name="z" default="0.17"/>
<arg name="r" default="0"/>
<arg name="p" default="0"/>
<arg name="ya" default="0"/>	

<!-- Spawn the ur5 robot model 
<node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" 
		args="-urdf -param robot_description -model ebot -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg r) -P $(arg p) -Y $(arg ya)" />
-->
<node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" 
	args="-urdf -param robot_description -model ebot -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg r) -P $(arg p) -Y $(arg ya)" />

<node pkg="ebot_gazebo" name="ebot_gazebo" type="task4_spawn_models.pyc" output="screen"/>




<include file="$(find pkg_moveit_ur5_1)/launch/moveit_rviz.launch">
  <arg name="rviz_config" value="$(find pkg_moveit_ur5_1)/launch/moveit.rviz"/>
  <arg name="debug" value="false"/>
</include> 

<!--
<arg name="scene_file" value="$(find pkg_moveit_ur5_1)/scenes/ur5_1_with_obstacles_3.scene"/>
<node name="moveit_publish_scene_from_text" pkg="moveit_ros_planning" type="moveit_publish_scene_from_text" args="$(arg scene_file)"/>
<node name="cv3" pkg="ebot_contoller" type="cv2.py" output="screen"/>
-->

<!-- Rosbag Recording Node -->
	<arg name="duration" default="120"/>
	<arg name="rec_name" default="task3.bag"/>
	<arg name="record" default="false"/>
	<group if="$(arg record)">
		<node name="state_node" pkg="topic_tools" type="throttle"
			args="messages /gazebo/model_states 10.0"/>

		<node name="task3_rosbag" pkg="rosbag" type="record"
			args="record -O $(find ebot_contoller)/bag_files/$(arg rec_name) --duration=$(arg duration) 
			/gazebo/model_states_throttle 
			/gripper_controller/follow_joint_trajectory/feedback
			/arm_controller/follow_joint_trajectory/feedback
			/tf" output="screen"/>
	</group>

</launch>
